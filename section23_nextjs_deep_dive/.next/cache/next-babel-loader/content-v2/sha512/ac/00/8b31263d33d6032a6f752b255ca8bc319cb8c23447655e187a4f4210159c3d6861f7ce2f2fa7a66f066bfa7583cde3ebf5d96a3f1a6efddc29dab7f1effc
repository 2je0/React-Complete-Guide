{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\bullj\\\\VSC\\\\React-Complete-Guide\\\\section23_nextjs_deep_dive\\\\pages\\\\[meetupId]\\\\index.jsx\";\nimport React from \"react\";\nimport MeetupDetails from \"../../components/meetups/MeetupDetails\";\nimport { MongoClient } from \"mongodb\";\n\nconst index = () => {\n  return /*#__PURE__*/_jsxDEV(MeetupDetails, {\n    img: \"https://www.akamai.com/site/im-demo/perceptual-standard.jpg\",\n    title: \"A second Meetup\",\n    address: \"seoul\",\n    description: \"new meet up\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n\nexport const getStaticPaths = async () => {\n  const client = await MongoClient.connect(\"mongodb+srv://leejeyoung:mF3Xz3msybcvSO1n@cluster0.bt1mh.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  return {\n    fallback: false,\n    paths: meetups.map(ele => {\n      return {\n        params: {\n          meetupId: ele._id.toString()\n        }\n      };\n    })\n  };\n};\nexport const getStaticProps = async context => {\n  //fetching data\n  const meetupId = context.params.meetupId;\n  return {\n    props: {\n      meetups: {\n        id: meetupId,\n        title: \"A second Meetup\",\n        image: \"https://www.akamai.com/site/im-demo/perceptual-standard.jpg\",\n        address: \"seoul\",\n        discription: \"new meet up\"\n      }\n    }\n  };\n};\nexport default index;","map":{"version":3,"sources":["C:/Users/bullj/VSC/React-Complete-Guide/section23_nextjs_deep_dive/pages/[meetupId]/index.jsx"],"names":["React","MeetupDetails","MongoClient","index","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","fallback","paths","map","ele","params","meetupId","toString","getStaticProps","context","props","id","title","image","address","discription"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,wCAA1B;AACA,SAASC,WAAT,QAA4B,SAA5B;;AACA,MAAMC,KAAK,GAAG,MAAM;AAClB,sBACE,QAAC,aAAD;AACE,IAAA,GAAG,EAAC,6DADN;AAEE,IAAA,KAAK,EAAC,iBAFR;AAGE,IAAA,OAAO,EAAC,OAHV;AAIE,IAAA,WAAW,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CATD;;AAWA,OAAO,MAAMC,cAAc,GAAG,YAAY;AACxC,QAAMC,MAAM,GAAG,MAAMH,WAAW,CAACI,OAAZ,CACnB,0GADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA3B,EAAuCC,OAAvC,EAAtB;AAEA,SAAO;AACLC,IAAAA,QAAQ,EAAE,KADL;AAELC,IAAAA,KAAK,EAAEL,OAAO,CAACM,GAAR,CAAaC,GAAD,IAAS;AAC1B,aAAO;AAAEC,QAAAA,MAAM,EAAE;AAAEC,UAAAA,QAAQ,EAAEF,GAAG,CAACL,GAAJ,CAAQQ,QAAR;AAAZ;AAAV,OAAP;AACD,KAFM;AAFF,GAAP;AAMD,CAfM;AAgBP,OAAO,MAAMC,cAAc,GAAG,MAAOC,OAAP,IAAmB;AAC/C;AACA,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AAEA,SAAO;AACLI,IAAAA,KAAK,EAAE;AACLb,MAAAA,OAAO,EAAE;AACPc,QAAAA,EAAE,EAAEL,QADG;AAEPM,QAAAA,KAAK,EAAE,iBAFA;AAGPC,QAAAA,KAAK,EAAE,6DAHA;AAIPC,QAAAA,OAAO,EAAE,OAJF;AAKPC,QAAAA,WAAW,EAAE;AALN;AADJ;AADF,GAAP;AAWD,CAfM;AAgBP,eAAezB,KAAf","sourcesContent":["import React from \"react\";\r\nimport MeetupDetails from \"../../components/meetups/MeetupDetails\";\r\nimport { MongoClient } from \"mongodb\";\r\nconst index = () => {\r\n  return (\r\n    <MeetupDetails\r\n      img='https://www.akamai.com/site/im-demo/perceptual-standard.jpg'\r\n      title='A second Meetup'\r\n      address='seoul'\r\n      description='new meet up'\r\n    />\r\n  );\r\n};\r\n\r\nexport const getStaticPaths = async () => {\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://leejeyoung:mF3Xz3msybcvSO1n@cluster0.bt1mh.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n  const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\r\n\r\n  return {\r\n    fallback: false,\r\n    paths: meetups.map((ele) => {\r\n      return { params: { meetupId: ele._id.toString() } };\r\n    }),\r\n  };\r\n};\r\nexport const getStaticProps = async (context) => {\r\n  //fetching data\r\n  const meetupId = context.params.meetupId;\r\n\r\n  return {\r\n    props: {\r\n      meetups: {\r\n        id: meetupId,\r\n        title: \"A second Meetup\",\r\n        image: \"https://www.akamai.com/site/im-demo/perceptual-standard.jpg\",\r\n        address: \"seoul\",\r\n        discription: \"new meet up\",\r\n      },\r\n    },\r\n  };\r\n};\r\nexport default index;\r\n"]},"metadata":{},"sourceType":"module"}