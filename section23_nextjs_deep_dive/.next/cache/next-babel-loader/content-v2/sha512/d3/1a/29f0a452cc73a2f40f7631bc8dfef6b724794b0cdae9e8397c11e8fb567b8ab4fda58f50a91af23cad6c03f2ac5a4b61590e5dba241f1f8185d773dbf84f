{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\bullj\\\\VSC\\\\React-Complete-Guide\\\\section23_nextjs_deep_dive\\\\pages\\\\[meetupId]\\\\index.jsx\";\nimport React from \"react\";\nimport MeetupDetails from \"../../components/meetups/MeetupDetails\";\nimport { MongoClient, ObjectId } from \"mongodb\";\n\nconst index = props => {\n  return /*#__PURE__*/_jsxDEV(MeetupDetails, {\n    img: props.meetups.image,\n    title: props.meetups.title,\n    address: props.meetups.address,\n    description: props.meetups.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n\nexport const getStaticPaths = async () => {\n  const client = await MongoClient.connect(\"mongodb+srv://leejeyoung:mF3Xz3msybcvSO1n@cluster0.bt1mh.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(ele => {\n      return {\n        params: {\n          meetupId: ele._id.toString()\n        }\n      };\n    })\n  };\n};\nexport const getStaticProps = async context => {\n  //fetching data\n  const meetupId = context.params.meetupId;\n  const client = await MongoClient.connect(\"mongodb+srv://leejeyoung:mF3Xz3msybcvSO1n@cluster0.bt1mh.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetup = await meetupsCollection.findOne({\n    _id: ObjectId(meetupId)\n  });\n  client.close();\n  return {\n    props: {\n      meetups: {\n        id: meetupId,\n        title: meetup.title,\n        image: meetup.image,\n        address: meetup.address,\n        discription: meetup.description\n      }\n    }\n  };\n};\nexport default index;","map":{"version":3,"sources":["C:/Users/bullj/VSC/React-Complete-Guide/section23_nextjs_deep_dive/pages/[meetupId]/index.jsx"],"names":["React","MeetupDetails","MongoClient","ObjectId","index","props","meetups","image","title","address","description","getStaticPaths","client","connect","db","meetupsCollection","collection","find","_id","toArray","close","fallback","paths","map","ele","params","meetupId","toString","getStaticProps","context","meetup","findOne","id","discription"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,wCAA1B;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,SAAtC;;AACA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AACvB,sBACE,QAAC,aAAD;AACE,IAAA,GAAG,EAAEA,KAAK,CAACC,OAAN,CAAcC,KADrB;AAEE,IAAA,KAAK,EAAEF,KAAK,CAACC,OAAN,CAAcE,KAFvB;AAGE,IAAA,OAAO,EAAEH,KAAK,CAACC,OAAN,CAAcG,OAHzB;AAIE,IAAA,WAAW,EAAEJ,KAAK,CAACC,OAAN,CAAcI;AAJ7B;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CATD;;AAWA,OAAO,MAAMC,cAAc,GAAG,YAAY;AACxC,QAAMC,MAAM,GAAG,MAAMV,WAAW,CAACW,OAAZ,CACnB,0GADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMV,OAAO,GAAG,MAAMS,iBAAiB,CAACE,IAAlB,CAAuB,EAAvB,EAA2B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA3B,EAAuCC,OAAvC,EAAtB;AACAP,EAAAA,MAAM,CAACQ,KAAP;AAEA,SAAO;AACLC,IAAAA,QAAQ,EAAE,KADL;AAELC,IAAAA,KAAK,EAAEhB,OAAO,CAACiB,GAAR,CAAaC,GAAD,IAAS;AAC1B,aAAO;AAAEC,QAAAA,MAAM,EAAE;AAAEC,UAAAA,QAAQ,EAAEF,GAAG,CAACN,GAAJ,CAAQS,QAAR;AAAZ;AAAV,OAAP;AACD,KAFM;AAFF,GAAP;AAMD,CAhBM;AAkBP,OAAO,MAAMC,cAAc,GAAG,MAAOC,OAAP,IAAmB;AAC/C;AACA,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AACA,QAAMd,MAAM,GAAG,MAAMV,WAAW,CAACW,OAAZ,CACnB,0GADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMc,MAAM,GAAG,MAAMf,iBAAiB,CAACgB,OAAlB,CAA0B;AAAEb,IAAAA,GAAG,EAAEf,QAAQ,CAACuB,QAAD;AAAf,GAA1B,CAArB;AACAd,EAAAA,MAAM,CAACQ,KAAP;AACA,SAAO;AACLf,IAAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAE;AACP0B,QAAAA,EAAE,EAAEN,QADG;AAEPlB,QAAAA,KAAK,EAAEsB,MAAM,CAACtB,KAFP;AAGPD,QAAAA,KAAK,EAAEuB,MAAM,CAACvB,KAHP;AAIPE,QAAAA,OAAO,EAAEqB,MAAM,CAACrB,OAJT;AAKPwB,QAAAA,WAAW,EAAEH,MAAM,CAACpB;AALb;AADJ;AADF,GAAP;AAWD,CAtBM;AAuBP,eAAeN,KAAf","sourcesContent":["import React from \"react\";\r\nimport MeetupDetails from \"../../components/meetups/MeetupDetails\";\r\nimport { MongoClient, ObjectId } from \"mongodb\";\r\nconst index = (props) => {\r\n  return (\r\n    <MeetupDetails\r\n      img={props.meetups.image}\r\n      title={props.meetups.title}\r\n      address={props.meetups.address}\r\n      description={props.meetups.description}\r\n    />\r\n  );\r\n};\r\n\r\nexport const getStaticPaths = async () => {\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://leejeyoung:mF3Xz3msybcvSO1n@cluster0.bt1mh.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n  const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\r\n  client.close();\r\n\r\n  return {\r\n    fallback: false,\r\n    paths: meetups.map((ele) => {\r\n      return { params: { meetupId: ele._id.toString() } };\r\n    }),\r\n  };\r\n};\r\n\r\nexport const getStaticProps = async (context) => {\r\n  //fetching data\r\n  const meetupId = context.params.meetupId;\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://leejeyoung:mF3Xz3msybcvSO1n@cluster0.bt1mh.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n  const meetup = await meetupsCollection.findOne({ _id: ObjectId(meetupId) });\r\n  client.close();\r\n  return {\r\n    props: {\r\n      meetups: {\r\n        id: meetupId,\r\n        title: meetup.title,\r\n        image: meetup.image,\r\n        address: meetup.address,\r\n        discription: meetup.description,\r\n      },\r\n    },\r\n  };\r\n};\r\nexport default index;\r\n"]},"metadata":{},"sourceType":"module"}