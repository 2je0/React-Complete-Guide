{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\bullj\\\\VSC\\\\React-Complete-Guide\\\\section23_nextjs_deep_dive\\\\pages\\\\[meetupId]\\\\index.jsx\",\n    _this = this;\n\nimport React from \"react\";\nimport MeetupDetails from \"../../components/meetups/MeetupDetails\";\n\nvar index = function index(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupDetails, {\n    img: props.meetups.image,\n    title: props.meetups.title,\n    address: props.meetups.address,\n    description: props.meetups.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, _this);\n};\n\nexport var __N_SSG = true;\nexport default index;","map":{"version":3,"sources":["C:/Users/bullj/VSC/React-Complete-Guide/section23_nextjs_deep_dive/pages/[meetupId]/index.jsx"],"names":["React","MeetupDetails","index","props","meetups","image","title","address","description"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,wCAA1B;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD,EAAW;AACvB,sBACE,QAAC,aAAD;AACE,IAAA,GAAG,EAAEA,KAAK,CAACC,OAAN,CAAcC,KADrB;AAEE,IAAA,KAAK,EAAEF,KAAK,CAACC,OAAN,CAAcE,KAFvB;AAGE,IAAA,OAAO,EAAEH,KAAK,CAACC,OAAN,CAAcG,OAHzB;AAIE,IAAA,WAAW,EAAEJ,KAAK,CAACC,OAAN,CAAcI;AAJ7B;AAAA;AAAA;AAAA;AAAA,WADF;AAQD,CATD;;;AAoDA,eAAeN,KAAf","sourcesContent":["import React from \"react\";\r\nimport MeetupDetails from \"../../components/meetups/MeetupDetails\";\r\nimport { MongoClient, ObjectId } from \"mongodb\";\r\nconst index = (props) => {\r\n  return (\r\n    <MeetupDetails\r\n      img={props.meetups.image}\r\n      title={props.meetups.title}\r\n      address={props.meetups.address}\r\n      description={props.meetups.description}\r\n    />\r\n  );\r\n};\r\n\r\nexport const getStaticPaths = async () => {\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://leejeyoung:mF3Xz3msybcvSO1n@cluster0.bt1mh.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n  const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\r\n  client.close();\r\n\r\n  return {\r\n    fallback: false,\r\n    paths: meetups.map((ele) => {\r\n      return { params: { meetupId: ele._id.toString() } };\r\n    }),\r\n  };\r\n};\r\n\r\nexport const getStaticProps = async (context) => {\r\n  //fetching data\r\n  const meetupId = context.params.meetupId;\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://leejeyoung:mF3Xz3msybcvSO1n@cluster0.bt1mh.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n  const meetup = await meetupsCollection.findOne({ _id: ObjectId(meetupId) });\r\n  client.close();\r\n  return {\r\n    props: {\r\n      meetups: {\r\n        id: meetupId,\r\n        title: meetup.title,\r\n        image: meetup.image,\r\n        address: meetup.address,\r\n        discription: meetup.description,\r\n      },\r\n    },\r\n  };\r\n};\r\nexport default index;\r\n"]},"metadata":{},"sourceType":"module"}